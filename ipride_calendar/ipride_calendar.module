<?php

/**
 * @file
 * Contains ipride_calendar.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;

use Drupal\ipride_calendar\Dao\PrincipalDao;
use Drupal\ipride_calendar\Util\Util;

/**
 * Implements hook_help().
 */
function ipride_calendar_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ipride_calendar module.
    case 'help.page.ipride_calendar':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('ipride calendar') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function ipride_calendar_theme() {
  return [
    'week_calendar_table' => [
      'variables' => [
        'dates' => [],
        'date_event_map' => [],
        'calendar_colors' => [],
        'date_class_strs' => [],
        'holiday_texts' => [],
      ]
    ],
    'day_calendar_table' => [
      'variables' => [
        'hours' => [],
        'all_day_events' => [],
        'normal_events' => [],
        'calendar_colors' => [],
        'date' => NULL,
      ],
    ],
    'event' => [
      'calendar_colors' => [],
    ],
    'list_calendar_table' => [
      'variables' => [
        'dates' => [],
        'date_event_map' => [],
        'calendar_colors' => [],
        'date_class_strs' => [],
        'holiday_texts' => [],
        'now' => NULL,
      ]
    ],
    'mail_notify_event' => [
      'variables' => [
        'organizer_name' => NULL,
        'summary' => NULL,
        'all_day' => NULL,
        'begin_date' => NULL,
        'end_date' => NULL,
        'month_view_url' => NULL,
        'short' => FALSE,
      ]
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function ipride_calendar_mail($key, &$message, $params) {
  if ($key == 'add_event') {
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['body'];
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function ipride_calendar_user_insert(EntityInterface $entity) {
  $mail = $entity->getEmail();
  $user_name = $entity->getUserName();

  //Add principals
  try {
    $dao = new PrincipalDao();
    $dao->add([
      'uri' => "principals/$user_name",
      'email' => $mail,
      'displayname' => $user_name,
    ]);

    $dao->add([
      'uri' => "principals/$user_name/calendar-proxy-read",
    ]);

    $dao->add([
      'uri' => "principals/$user_name/calendar-proxy-write",
    ]);
  }
  catch(Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function ipride_calendar_user_delete(EntityInterface $entity) {
  $user_name = $entity->getUserName();

  try {
    $dao = new PrincipalDao();
    $dao->removeByUri("principals/$user_name");
    $dao->removeByUri("principals/$user_name/calendar-proxy-read");
    $dao->removeByUri("principals/$user_name/calendar-proxy-write");
  }
  catch(Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}
